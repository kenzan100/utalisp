(define square (lambda (x) (* x x)))
(define area (lambda (r) (begin (define pi 3.14) (* pi (* r r)))))
(define sqrt (lambda (x) (sqrt-iter 1.0 x)))
(define abs (lambda (x) (if (> x 0) x (- 0 x))))
(define sqrt-iter (lambda (guess x) (if (good-enough? guess x) guess (sqrt-iter (improve guess x) x))))
(define good-enough? (lambda (guess x) (< (abs (- x (square guess))) 1.0e-05)))
(define improve (lambda (guess x) (average guess (/ x guess))))
(define average (lambda (x y) (* 0.5 (+ x y))))
